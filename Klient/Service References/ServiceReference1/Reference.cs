//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Klient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDictService")]
    public interface IDictService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictService/addWord", ReplyAction="http://tempuri.org/IDictService/addWordResponse")]
        bool addWord(string n1, string n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictService/addWord", ReplyAction="http://tempuri.org/IDictService/addWordResponse")]
        System.Threading.Tasks.Task<bool> addWordAsync(string n1, string n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictService/modifyWord", ReplyAction="http://tempuri.org/IDictService/modifyWordResponse")]
        bool modifyWord(string n1, string n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictService/modifyWord", ReplyAction="http://tempuri.org/IDictService/modifyWordResponse")]
        System.Threading.Tasks.Task<bool> modifyWordAsync(string n1, string n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictService/removeWord", ReplyAction="http://tempuri.org/IDictService/removeWordResponse")]
        bool removeWord(string n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictService/removeWord", ReplyAction="http://tempuri.org/IDictService/removeWordResponse")]
        System.Threading.Tasks.Task<bool> removeWordAsync(string n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictService/searchWord", ReplyAction="http://tempuri.org/IDictService/searchWordResponse")]
        string searchWord(string n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDictService/searchWord", ReplyAction="http://tempuri.org/IDictService/searchWordResponse")]
        System.Threading.Tasks.Task<string> searchWordAsync(string n);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDictServiceChannel : Klient.ServiceReference1.IDictService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DictServiceClient : System.ServiceModel.ClientBase<Klient.ServiceReference1.IDictService>, Klient.ServiceReference1.IDictService {
        
        public DictServiceClient() {
        }
        
        public DictServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DictServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool addWord(string n1, string n2) {
            return base.Channel.addWord(n1, n2);
        }
        
        public System.Threading.Tasks.Task<bool> addWordAsync(string n1, string n2) {
            return base.Channel.addWordAsync(n1, n2);
        }
        
        public bool modifyWord(string n1, string n2) {
            return base.Channel.modifyWord(n1, n2);
        }
        
        public System.Threading.Tasks.Task<bool> modifyWordAsync(string n1, string n2) {
            return base.Channel.modifyWordAsync(n1, n2);
        }
        
        public bool removeWord(string n) {
            return base.Channel.removeWord(n);
        }
        
        public System.Threading.Tasks.Task<bool> removeWordAsync(string n) {
            return base.Channel.removeWordAsync(n);
        }
        
        public string searchWord(string n) {
            return base.Channel.searchWord(n);
        }
        
        public System.Threading.Tasks.Task<string> searchWordAsync(string n) {
            return base.Channel.searchWordAsync(n);
        }
    }
}
